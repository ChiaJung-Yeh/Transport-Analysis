[["r-語言基礎語法.html", "Chapter 1 R 語言基礎語法 1.1 物件（Object）", " Chapter 1 R 語言基礎語法 本章節系統性介紹 R 語言的重要語法和dplyr套件的功能及用法，請務必熟悉各函式，以便後續程式碼撰寫。 1.1 物件（Object） 物件是 R 語言中構成資料的基本要素，常見者包含五大類： 向量（vector） 層級（factor） 矩陣（matrix） 資料框（data frame） 陣列（list） 以下各小節針對各基本要素的構建與運算詳細說明。 1.1.1 向量（Vector） ⌾ 向量的性質 一組值 一維 資料型態可為：數值、文字、邏輯值 ⌾ 建立向量 建立向量可利用c()函式建構。 數值向量 vec1=c(1,2,3,4,5) ## [1] 1 2 3 4 5 文字向量 vec2=c(&quot;A&quot;,&quot;B&quot;,&quot;C&quot;,&quot;D&quot;,&quot;E&quot;) ## [1] &quot;A&quot; &quot;B&quot; &quot;C&quot; &quot;D&quot; &quot;E&quot; 邏輯向量 vec3=c(T,F,T,F,T) ## [1] TRUE FALSE TRUE FALSE TRUE ⌾ 擷取向量中特定元素 擷取單一元素 vec2[3] ## [1] &quot;C&quot; 擷取多個連續元素 vec2[2:4] ## [1] &quot;B&quot; &quot;C&quot; &quot;D&quot; 擷取多個非連續元素 vec2[c(1,3,5)] ## [1] &quot;A&quot; &quot;C&quot; &quot;E&quot; 以邏輯值擷取元素 請注意輸入的邏輯值向量長度必須與原向量相同！ vec2[c(T,T,F,F,T)] ## [1] &quot;A&quot; &quot;B&quot; &quot;E&quot; ⌾ 連續數值資料 利用seq()函式建立連續數值，程式碼撰寫如下： seq(from=開始數值, to=結束數值, by=遞增數值) seq(from=2, to=20, by=2) ## [1] 2 4 6 8 10 12 14 16 18 20 ⌾ 向量運算 統計運算 以下建立一個向量vec4作為範例，所有運算的程式碼與結果請參照表1.1。 vec4=c(5,9,3,15,6,2,8,12) 表 1.1: 向量運算 運算 程式碼 輸出結果 最大值 max(vec4) 15 最小值 min(vec4) 2 最大值索引 which.max(vec4) 4 最小值索引 which.min(vec4) 6 全域 range(vec4) 2 15 總和 sum(vec4) 60 平均 mean(vec4) 7.5 中位數 median(vec4) 7 乘積 prod(vec4) 2332800 變異數 var(vec4) 19.714 標準差 sd(vec4) 4.44 數學運算 以下利用vec4與新建向量vec5作為範例，所有運算的程式碼與結果請參照表1.2。。 vec5=c(0.57,4.28,-1.23,6.58,-4.67,2.09) 表 1.2: 數學運算 運算 程式碼 輸出結果 絕對值 abs(vec5) 0.57 4.28 1.23 6.58 4.67 2.09 根號 sqrt(vec4) 2.236 3 1.732 3.873 2.449 1.414 2.828 3.464 四捨五入 round(vec5, digits=1) 0.6 4.3 -1.2 6.6 -4.7 2.1 取整函數 ceiling(vec5) 1 5 -1 7 -4 3 下取整函數 floor(vec5) 0 4 -2 6 -5 2 對數 log(vec4) 1.609 2.197 1.099 2.708 1.792 0.693 2.079 2.485 指數 exp(vec4) 148.4 8103.1 20.1 3269017.4 403.4 7.4 2981 162754.8 標準化 scale(vec4) -0.563 0.338 -1.013 1.689 -0.338 -1.239 0.113 1.013 累積加總 cumsum(vec4) 5 14 17 32 38 40 48 60 ⌾ 向量長度 計算向量中的元素個數。 length(vec4) ## [1] 8 ⌾ 向量排序 sort()函式直接將向量予以由小至大之排序 order()函式回傳向量由小至大排序所對應的原向量序號 rank()函式回傳向量中各元素由小至大之順序 程式碼撰寫如下，請參照圖1.1之示意圖。 圖 1.1: 排序函式示意圖 sort(vec4) ## [1] 2 3 5 6 8 9 12 15 order(vec4) ## [1] 6 3 1 5 7 2 8 4 rank(vec4) ## [1] 3 6 2 8 4 1 5 7 由sort()的結果可知，其將vec4向量由小至大排序。order()則是回傳排序所對應至原向量的序號，例如回傳結果的最後一個值是4，表示該向量中最大的數值位於向量的第 4 個元素。根據上述，我們亦可透過如下程式碼達到與sort()相同的結果。 vec4[order(vec4)] ## [1] 2 3 5 6 8 9 12 15 ⌾ 向量唯一值 去除重複的值。 vec_dup=c(1,9,5,2,6,1,8,5,2) unique(vec_dup) ## [1] 1 9 5 2 6 8 ⌾ 檢查使否存在 NA vec_na=c(1,9,5,NA,6,NA) is.na(vec_na) ## [1] FALSE FALSE FALSE TRUE FALSE TRUE ⌾ 向量四則運算 以下範例使用vec4與新建立的vec6示範向量的四則運算。 vec6=c(2,5,8,11,7,4,10,3) 兩向量運算 兩向量運算時，兩組向量的長度（length()）務必相同！ 所有運算結果如表1.3。 表 1.3: 向量運算 運算 程式碼 輸出結果 vec4=c(5,9,3,15,6,2,8,12) vec6=c(2,5,8,11,7,4,10,3) 加法 vec4+vec6 7 14 11 26 13 6 18 15 減法 vec4-vec6 3 4 -5 4 -1 -2 -2 9 乘法 vec4*vec6 10 45 24 165 42 8 80 36 除法 vec4/vec6 2.5 1.8 0.375 1.364 0.857 0.5 0.8 4 取餘數 vec4 %% vec6 1 4 3 4 6 2 8 0 取除數 vec4 %/% vec6 2 1 0 1 0 0 0 4 內積 vec4 %*% vec6 410 向量與元素運算 一組向量與一個元素之間的運算，即是將向量中的每一個元素分別與該元素運算。 vec6+5 ## [1] 7 10 13 16 12 9 15 8 vec6*5 ## [1] 10 25 40 55 35 20 50 15 ⌾ 轉換資料型態 文字轉換為數值 建立vec_cha文字資料 vec_cha=c(&quot;1&quot;,&quot;2&quot;,&quot;3&quot;,&quot;4&quot;,&quot;5&quot;) 先利用class()函式檢查vec_cha資料型態 class(vec_cha) ## [1] &quot;character&quot; 利用as.numeric()函式轉化為數值資料 as.numeric(vec_cha) ## [1] 1 2 3 4 5 另外，可利用as.character()函式轉化為文字資料 vec_num=c(1,2,3,4,5) as.character(vec_num) ## [1] &quot;1&quot; &quot;2&quot; &quot;3&quot; &quot;4&quot; &quot;5&quot; ⌾ 建立重複資料 利用rep()函式建立重複資料，該函式主要有兩大參數可以設定： each=是設定每一個元素重複的次數 times=是設定該向量整體循環的次數 以實際範例說明之，程式碼撰寫如下： vec6=c(2,5,8,11,7,4,10,3) # 設定每一個元素重複的次數 rep(vec6, each=2) ## [1] 2 2 5 5 8 8 11 11 7 7 4 4 10 10 3 3 # 設定向量整體重複的次數 rep(vec6, times=2) ## [1] 2 5 8 11 7 4 10 3 2 5 8 11 7 4 10 3 "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
