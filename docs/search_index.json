[["基本資料統計.html", "Chapter 1 基本資料統計 1.1 公車資料統計分析", " Chapter 1 基本資料統計 透過dplyr套件統計運輸資料是數據分析的第一步，可瞭解運輸供給與需求的概況，並可將大數據轉換為可理解且有意涵的資訊。 1.1 公車資料統計分析 請先利用 TDX 套件介接公車資料（以新竹市為例）： # 公車路線 bus_route=Bus_Route(access_token, &quot;Hsinchu&quot;) # 公車站牌 bus_stop=Bus_StopOfRoute(access_token, &quot;Hsinchu&quot;) 以下針對各議題展示分析架構與程式碼撰寫，針對每一問題先瞭解運輸資料的特性，而後再依據分析邏輯撰寫程式碼。 ◎ 統計路線 公車路線的代碼有兩種，其一為 RouteUID，另一為 SubRouteUID。前者是主路線代碼，後者是子路線代碼，亦即將主路線再依據不同行駛路線（如：延駛、繞駛等）或方向（去程、返程）再細部分類不同路線。 • 統計所有主路線數 先初步觀察bus_route資料可以發現，當中有許多重複的主路線，故不可直接透過資料的列數（row）來判斷主路線數，必須先去除重複的代碼。unique()函式可用以去除一向量中重複的元素，故執行後索回傳的向量僅會是唯一值。若欲計算一向量的總個數，可透過length()回傳長度。程式碼撰寫如下。 bus_routeuid_all=unique(bus_route$RouteUID) length(bus_routeuid_all) ## [1] 26 試著統計此資料的總子路線數，檢查是否與bus_route總資料筆數相同？ bus_subrouteuid_all=unique(bus_route$SubRouteUID) # 總子路線數 length(bus_subrouteuid_all) ## [1] 54 # 檢查是否與資料總筆數相同 length(bus_subrouteuid_all)==nrow(bus_route) ## [1] TRUE 由以上結果得知，總子路線數會等於總資料筆數！ • 統計各主路線擁有的子路線數 由於我們知道一個主路線可能含括多個子路線，若欲統計各主路線擁有的子路線數，可利用group_by() %&gt;% summarise()達成此一目的，程式碼撰寫如下。首先根據 RouteUID 分組，再統計相同 RouteUID 的總資料筆數（n()）。 bus_route_sum=group_by(bus_route, RouteUID)%&gt;% summarise(NumSubRoute=n()) # 查看前六筆結果 head(bus_route_sum) ## # A tibble: 6 × 2 ## RouteUID NumSubRoute ## &lt;chr&gt; &lt;int&gt; ## 1 HSZ0007 2 ## 2 HSZ0008 4 ## 3 HSZ0010 1 ## 4 HSZ0020 4 ## 5 HSZ0100 2 ## 6 HSZ0110 2 由統計結果可知，RouteUID 為 HSZ0007（路線名為 81）者，其子路線數為 2 條，查看原始bus_route資料，可發現其含括子路線 HSZ000701 與 HSZ000702；又 HSZ0008（路線名為 83）的子路線數共計 4 條，其中包含 HSZ000801、HSZ000802、HSZ0008A1、HSZ0008A2。細部觀察原始資料，可發現 HSZ0007 兩條子路線的 Direction 一個為 0；另一為 1，表示方向不同，子路線即不同。而 HSZ0008 除了因方向不同而有不同子路線外，子路線代碼含括「A1」與「A2」者為延駛或繞駛，亦會使子路線不同。上述皆為 TDX 針對公車路線編碼的標準規範。最後 HSZ0010（路線名為 藍線1區）僅一條子路線，乃因該路線為環狀線。（注意藍線1區公車係由火車站至竹中站後立即折返，故屬於環狀線。） • 整理各主路線含括的子路線 前一案例藉由group_by() %&gt;% summarise()計算總數，事實上此一函式的功能繁多，可透過改變summarise()函式內的操作，以達成目的。如欲整理各主路線含括的子路線代碼與名稱，應將 RouteUID 與 RouteName 作為分群的變項，並在summarise()函式中將所有同一分群者，將其子路線代碼以paste()函式相連。其中paste()函式內，須設定collapse=參數，以表達使用特定的符號或字元串接。依上述流程，程式碼撰寫如下。 bus_route_list=group_by(bus_route, RouteUID, RouteName)%&gt;% summarise(AllSubRoute=paste(SubRouteUID, collapse=&quot;, &quot;)) ## `summarise()` has grouped output by &#39;RouteUID&#39;. You can override using the ## `.groups` argument. # 查看前六筆結果 head(bus_route_list) ## # A tibble: 6 × 3 ## # Groups: RouteUID [6] ## RouteUID RouteName AllSubRoute ## &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; ## 1 HSZ0007 81 HSZ000701, HSZ000702 ## 2 HSZ0008 83 HSZ000801, HSZ000802, HSZ0008A1, HSZ0008A2 ## 3 HSZ0010 藍線1區 HSZ001001 ## 4 HSZ0020 2 HSZ002001, HSZ002002, HSZ0020A1, HSZ0020A2 ## 5 HSZ0100 10 HSZ010001, HSZ010002 ## 6 HSZ0110 11 HSZ0110A1, HSZ0110A2 "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
